name: Build and test pkg

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: write
  pull-requests: write

jobs:

  test_fpm:
    name: ${{ matrix.os }}_${{ matrix.compiler }}_fpm
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [gfortran, lfortran]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - compiler: lfortran
            os: windows-latest
        include:
          - compiler: gfortran
            os: ubuntu-latest
            compiler-version: 14.2.0
            extra-packages: ""
          - compiler: gfortran
            os: windows-latest
            compiler-version: 14.2.0
            extra-packages: ""
          - compiler: lfortran
            os: ubuntu-latest
            extra-packages: ""
          
    steps:
      - name: Set up Fortran
        uses: gha3mi/setup-fortran-conda@latest
        with:
          compiler: ${{ matrix.compiler }}
          compiler-version: ${{ matrix.compiler-version }}
          platform: ${{ matrix.os }}
          extra-packages: ${{ matrix.extra-packages }}

      - name: Test debug mode
        run: fpm test --compiler ${{ matrix.compiler }} --profile debug --flag "-fopenmp" --verbose

      - name: Test release mode
        run: fpm test --compiler ${{ matrix.compiler }} --profile release --flag "-fopenmp" --verbose

      - name: Run examples
        run: |
          gfortran --version
          fpm run --example "example1*" --profile release --flag "-fopenmp"
          fpm run --example "example2*" --profile release --flag "-fopenmp"

  # Generate STATUS.md from FPM job results
  status_fpm:
    name: Generate STATUS.md
    if: always()
    needs: test_fpm
    runs-on: ubuntu-latest
    steps:
      - name: Generate summary
        uses: gha3mi/setup-fortran-conda@latest
        with:
          generate-status-fpm: true
