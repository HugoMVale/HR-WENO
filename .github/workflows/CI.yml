name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc_v: [10] # Version of GFortran we want to use.
        include:
        - os: ubuntu-latest
          os-arch: linux-x86_64

    env:
      FC: gfortran
      GCC_V: ${{ matrix.gcc_v }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
       
    - name: Install GFortran Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-${GCC_V}
    
    - name: Install fpm
      uses: fortran-lang/setup-fpm@v3
      with:
        fpm-version: 'v0.6.0'

    - name: Build hrweno
      run: |
        gfortran --version
        fpm build
        
    - name: Run tests
      run: |
        gfortran --version
        fpm test
        
    - name: Run examples
      run: |
        gfortran --version
        fpm run --example
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        # token: ${{ secrets.CODECOV_TOKEN }}
        # directory: ./coverage/reports/
        # env_vars: OS,PYTHON
        # fail_ci_if_error: true
        # files: ./coverage1.xml,./coverage2.xml
        # flags: unittests
        # name: codecov-umbrella
        # path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
